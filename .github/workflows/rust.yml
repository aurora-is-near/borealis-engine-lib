name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  fmt:
    name: Formatting
    runs-on: runs-on=${{ github.run_id }}/family=c6a.xlarge/image=ubuntu24-full-x64
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: runs-on=${{ github.run_id }}/family=c6a.4xlarge/image=ubuntu24-full-x64/extras=s3-cache
    container: rust:latest
    steps:
      - name: Setup RunsOn
        uses: runs-on/action@v2
        with:
          metrics: cpu,network,memory,disk,io
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install dependencies
        run: .github/ci-deps.sh
      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"
          cache-all-crates: "true"
      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets -- -D clippy::all -D clippy::nursery

  test:
    name: ${{ matrix.build }}
    runs-on: ${{ matrix.image }}
    container: ${{ matrix.container }}
    strategy:
      matrix:
        build: [ Linux, macOS ]
        include:
          - build: Linux
            image: runs-on=${{ github.run_id }}/family=c6a.8xlarge/image=ubuntu24-full-x64/extras=s3-cache
            container: rust:latest
          - build: macOS
            image: macos-latest
    steps:
      - name: Setup RunsOn
        if: ${{ matrix.build == 'Linux' }}
        uses: runs-on/action@v2
        with:
          metrics: cpu,network,memory,disk,io
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install dependencies
        if: ${{ matrix.build == 'Linux' }}
        run: .github/ci-deps.sh
      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"
          cache-all-crates: "true"
      - name: Fix issue with dubious ownership in repository
        run: git config --global --add safe.directory ${GITHUB_WORKSPACE}
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --exclude aurora-refiner-app-integration-tests

  run-test:
    name: Run app test
    runs-on: runs-on=${{ github.run_id }}/family=c6a.8xlarge/image=ubuntu24-full-x64/extras=s3-cache
    container: rust:latest
    steps:
      - name: Setup RunsOn
        uses: runs-on/action@v2
        with:
          metrics: cpu,network,memory,disk,io
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install dependencies
        run: .github/ci-deps.sh
      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"
          cache-all-crates: "true"
      - name: Fix issue with dubious ownership in repository
        run: git config --global --add safe.directory ${GITHUB_WORKSPACE}
      - name: Run integration tests
        run: |
          rustup target add wasm32-unknown-unknown
          rustup component add rust-src
          cargo test -p aurora-refiner-app-integration-tests
