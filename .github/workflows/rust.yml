name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  fmt:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Cargo Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.lock') }}
      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets -- -D clippy::all -D clippy::nursery

  test:
    name: ${{ matrix.build }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [ Linux, macOS ]
        include:
          - build: Linux
            os: github-hosted-heavy-runner
          - build: macOS
            os: macos-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Cargo Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
      - name: Build tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-run --workspace --exclude aurora-refiner-app-integration-tests
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --exclude aurora-refiner-app-integration-tests

  run-test:
    name: Run app test
    runs-on: [ self-hosted, heavy ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Restore cache
        run: cache-util restore borealis-engine-lib@target@generic@${{ hashFiles('**/Cargo.lock') }}:target
      - name: Install Clang
        run: |
          apt-get update
          apt-get install -y clang
      - name: Run integration tests
        env:
          CC: clang
          CXX: clang++
        run: |
          rustup target add wasm32-unknown-unknown
          rustup component add rust-src
          cargo test -p aurora-refiner-app-integration-tests
      - name: Save cache
        run: cache-util msave borealis-engine-lib@target@generic@${{ hashFiles('**/Cargo.lock') }}:target
